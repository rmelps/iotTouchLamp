Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              AVRLib/USART.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              AVRLib/USART.o (__udivmodhi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              RGBLEDwButtons.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              RGBLEDwButtons.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ssid                0x1e              RGBLEDwButtons.o
iReceiveBuffer      0x1               RGBLEDwButtons.o
iCommands           0x1               RGBLEDwButtons.o
dataR               0x3               RGBLEDwButtons.o
pswd                0x1e              RGBLEDwButtons.o
dataB               0x3               RGBLEDwButtons.o
errorCount          0x1               RGBLEDwButtons.o
colorBalance        0x3               RGBLEDwButtons.o
AT_currentMode      0x1               RGBLEDwButtons.o
receiveBuffer       0x3c              RGBLEDwButtons.o
dataG               0x3               RGBLEDwButtons.o

Discarded input sections

 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .text          0x00000000        0x0 RGBLEDwButtons.o
 .bss           0x00000000        0x0 RGBLEDwButtons.o
 .text          0x00000000        0x0 AVRLib/ATCommands.o
 .bss           0x00000000        0x0 AVRLib/ATCommands.o
 .rodata.sn     0x00000000        0x2 AVRLib/ATCommands.o
 .text          0x00000000        0x0 AVRLib/SPI.o
 .bss           0x00000000        0x0 AVRLib/SPI.o
 .text.EEPROM_readByte
                0x00000000       0x24 AVRLib/SPI.o
 .text.EEPROM_writeByte
                0x00000000       0x34 AVRLib/SPI.o
 .text          0x00000000        0x0 AVRLib/USART.o
 .bss           0x00000000        0x0 AVRLib/USART.o
 .text.receiveByte
                0x00000000        0xe AVRLib/USART.o
 .text.printVolatileString
                0x00000000       0x28 AVRLib/USART.o
 .text.readString
                0x00000000       0x58 AVRLib/USART.o
 .text.printWord
                0x00000000       0x76 AVRLib/USART.o
 .text.printBinaryByte
                0x00000000       0x3c AVRLib/USART.o
 .text.nibbleToHexCharacter
                0x00000000        0xc AVRLib/USART.o
 .text.printHexByte
                0x00000000       0x1e AVRLib/USART.o
 .text.getNumber
                0x00000000       0x4a AVRLib/USART.o
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000       0x28 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
LOAD RGBLEDwButtons.o
LOAD AVRLib/ATCommands.o
LOAD AVRLib/SPI.o
LOAD AVRLib/USART.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xfe6
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data.AT_cipclose
                0x00000068        0xd AVRLib/ATCommands.o
                0x00000068                AT_cipclose
 .progmem.data.AT_cipstart
                0x00000075       0x4b AVRLib/ATCommands.o
                0x00000075                AT_cipstart
 .progmem.data.AT_rst
                0x000000c0        0x9 AVRLib/ATCommands.o
                0x000000c0                AT_rst
 .progmem.data.AT_cipserver
                0x000000c9        0xe AVRLib/ATCommands.o
                0x000000c9                AT_cipserver
 .progmem.data.AT_cipmux
                0x000000d7        0xe AVRLib/ATCommands.o
                0x000000d7                AT_cipmux
 .progmem.data.AT_cipsend
                0x000000e5        0xc AVRLib/ATCommands.o
                0x000000e5                AT_cipsend
 .progmem.data.AT_cwjap_cur
                0x000000f1        0xf AVRLib/ATCommands.o
                0x000000f1                AT_cwjap_cur
 .progmem.data.AT_cwmode_cur
                0x00000100        0xf AVRLib/ATCommands.o
                0x00000100                AT_cwmode_cur
 .progmem.data.AT_WP_error
                0x0000010f       0x1f AVRLib/ATCommands.o
                0x0000010f                AT_WP_error
 .progmem.data.AT_WP_submit
                0x0000012e       0x65 AVRLib/ATCommands.o
                0x0000012e                AT_WP_submit
 .progmem.data.AT_WP_home
                0x00000193       0xf2 AVRLib/ATCommands.o
                0x00000193                AT_WP_home
 .progmem.data.AT_port
                0x00000285        0x3 AVRLib/ATCommands.o
                0x00000285                AT_port
 .progmem.data.AT_TCPContentLength
                0x00000288       0x14 AVRLib/ATCommands.o
                0x00000288                AT_TCPContentLength
 .progmem.data.AT_TCPHostText
                0x0000029c       0x32 AVRLib/ATCommands.o
                0x0000029c                AT_TCPHostText
 .progmem.data.AT_HTTPver
                0x000002ce        0xc AVRLib/ATCommands.o
                0x000002ce                AT_HTTPver
 .progmem.data.AT_requestTypeGet
                0x000002da        0x5 AVRLib/ATCommands.o
                0x000002da                AT_requestTypeGet
 .progmem.data.AT_requestTypePost
                0x000002df        0x6 AVRLib/ATCommands.o
                0x000002df                AT_requestTypePost
 .progmem.data.AT_setBlue
                0x000002e5        0x4 AVRLib/ATCommands.o
                0x000002e5                AT_setBlue
 .progmem.data.AT_setGreen
                0x000002e9        0x4 AVRLib/ATCommands.o
                0x000002e9                AT_setGreen
 .progmem.data.AT_setRed
                0x000002ed        0x4 AVRLib/ATCommands.o
                0x000002ed                AT_setRed
 .progmem.data.AT_setColor
                0x000002f1        0xd AVRLib/ATCommands.o
                0x000002f1                AT_setColor
 .progmem.data.AT_getColor
                0x000002fe        0xd AVRLib/ATCommands.o
                0x000002fe                AT_getColor
 .progmem.data.AT_terminator
                0x0000030b        0x4 AVRLib/ATCommands.o
                0x0000030b                AT_terminator
 .progmem.data.AT_separator
                0x0000030f        0x4 AVRLib/ATCommands.o
                0x0000030f                AT_separator
                0x00000314                . = ALIGN (0x2)
 *fill*         0x00000313        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000314                __ctors_start = .
 *(.ctors)
                0x00000314                __ctors_end = .
                0x00000314                __dtors_start = .
 *(.dtors)
                0x00000314                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000314        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000314                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000314        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000320       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000320                __do_copy_data
 .init4         0x00000336       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x00000336                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000346        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000034e        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x0000034e                __vector_20
                0x0000034e                __vector_1
                0x0000034e                __vector_24
                0x0000034e                __bad_interrupt
                0x0000034e                __vector_6
                0x0000034e                __vector_3
                0x0000034e                __vector_23
                0x0000034e                __vector_25
                0x0000034e                __vector_13
                0x0000034e                __vector_17
                0x0000034e                __vector_19
                0x0000034e                __vector_7
                0x0000034e                __vector_5
                0x0000034e                __vector_9
                0x0000034e                __vector_2
                0x0000034e                __vector_21
                0x0000034e                __vector_15
                0x0000034e                __vector_8
                0x0000034e                __vector_14
                0x0000034e                __vector_10
                0x0000034e                __vector_16
                0x0000034e                __vector_22
                0x00000352                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_4
                0x00000352       0x7e RGBLEDwButtons.o
                0x00000352                __vector_4
 .text.startup.main
                0x000003d0      0x208 RGBLEDwButtons.o
                0x000003d0                main
 .text.clearBuffer
                0x000005d8       0x12 RGBLEDwButtons.o
                0x000005d8                clearBuffer
 .text.__vector_11
                0x000005ea       0x9a RGBLEDwButtons.o
                0x000005ea                __vector_11
 .text.__vector_12
                0x00000684       0x78 RGBLEDwButtons.o
                0x00000684                __vector_12
 .text.compareString
                0x000006fc       0x1e RGBLEDwButtons.o
                0x000006fc                compareString
 .text.get_SSID_PSWD_fromPartialQueryString
                0x0000071a       0x86 RGBLEDwButtons.o
                0x0000071a                get_SSID_PSWD_fromPartialQueryString
 .text.strToUInt8
                0x000007a0       0x62 RGBLEDwButtons.o
                0x000007a0                strToUInt8
 .text.__vector_18
                0x00000802      0x35e RGBLEDwButtons.o
                0x00000802                __vector_18
 .text.transmitFromPGMSpace
                0x00000b60       0x4a AVRLib/ATCommands.o
                0x00000b60                transmitFromPGMSpace
 .text.ATsetCurrentWifiMode
                0x00000baa       0x2a AVRLib/ATCommands.o
                0x00000baa                ATsetCurrentWifiMode
 .text.ATconnectToAPI
                0x00000bd4       0x40 AVRLib/ATCommands.o
                0x00000bd4                ATconnectToAPI
 .text.ATsetMultipleConnections
                0x00000c14        0xa AVRLib/ATCommands.o
                0x00000c14                ATsetMultipleConnections
 .text.ATsetupServer
                0x00000c1e       0x40 AVRLib/ATCommands.o
                0x00000c1e                ATsetupServer
 .text.ATReset  0x00000c5e       0x1e AVRLib/ATCommands.o
                0x00000c5e                ATReset
 .text.ATWaitForData
                0x00000c7c        0x8 AVRLib/ATCommands.o
                0x00000c7c                ATWaitForData
 .text.ATTCPStart
                0x00000c84       0x12 AVRLib/ATCommands.o
                0x00000c84                ATTCPStart
 .text.ATSendResp
                0x00000c96       0x6a AVRLib/ATCommands.o
                0x00000c96                ATSendResp
 .text.ATSendData
                0x00000d00       0xf6 AVRLib/ATCommands.o
                0x00000d00                ATSendData
 .text.ATClose  0x00000df6       0x2c AVRLib/ATCommands.o
                0x00000df6                ATClose
 .text.initSPI_Master
                0x00000e22       0x14 AVRLib/SPI.o
                0x00000e22                initSPI_Master
 .text.SPI_tradeByte
                0x00000e36        0xa AVRLib/SPI.o
                0x00000e36                SPI_tradeByte
 .text.EEPROM_readStatus
                0x00000e40       0x14 AVRLib/SPI.o
                0x00000e40                EEPROM_readStatus
 .text.EEPROM_sendAddress
                0x00000e54       0x12 AVRLib/SPI.o
                0x00000e54                EEPROM_sendAddress
 .text.EEPROM_readPage
                0x00000e66       0x6a AVRLib/SPI.o
                0x00000e66                EEPROM_readPage
 .text.EEPROM_writeEnable
                0x00000ed0        0xc AVRLib/SPI.o
                0x00000ed0                EEPROM_writeEnable
 .text.EEPROM_writePage
                0x00000edc       0x66 AVRLib/SPI.o
                0x00000edc                EEPROM_writePage
 .text.initUSART
                0x00000f42       0x22 AVRLib/USART.o
                0x00000f42                initUSART
 .text.transmitByte
                0x00000f64        0xe AVRLib/USART.o
                0x00000f64                transmitByte
 .text.printString
                0x00000f72       0x26 AVRLib/USART.o
                0x00000f72                printString
 .text.printByte
                0x00000f98       0x32 AVRLib/USART.o
                0x00000f98                printByte
 .text.libgcc.div
                0x00000fca       0x18 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                0x00000fca                __udivmodqi4
                0x00000fe2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000fe2        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x00000fe2                exit
                0x00000fe2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000fe2        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000fe6                _etext = .

.data           0x00800100       0x9c load address 0x00000fe6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 RGBLEDwButtons.o
 .data          0x00800100        0x0 AVRLib/ATCommands.o
 .data          0x00800100        0x0 AVRLib/SPI.o
 .data          0x00800100        0x0 AVRLib/USART.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.TCPReqCommands
                0x00800100       0x18 RGBLEDwButtons.o
                0x00800100                TCPReqCommands
 .data.initCommands
                0x00800118       0x48 RGBLEDwButtons.o
                0x00800118                initCommands
 .data.linkID   0x00800160        0x2 RGBLEDwButtons.o
                0x00800160                linkID
 .data.nextCommand
                0x00800162        0x1 RGBLEDwButtons.o
                0x00800162                nextCommand
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800163       0x30 RGBLEDwButtons.o
                                 0x39 (size before relaxing)
 .rodata.str1.1
                0x00800193        0x8 AVRLib/ATCommands.o
                                  0xa (size before relaxing)
 *(.gnu.linkonce.d*)
                0x0080019c                . = ALIGN (0x2)
 *fill*         0x0080019b        0x1 
                0x0080019c                _edata = .
                0x0080019c                PROVIDE (__data_end, .)

.bss            0x0080019c       0x88
                0x0080019c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080019c       0x88 RGBLEDwButtons.o
                0x0080019c                ssid
                0x008001ba                iReceiveBuffer
                0x008001bb                iCommands
                0x008001bc                dataR
                0x008001bf                pswd
                0x008001dd                dataB
                0x008001e0                errorCount
                0x008001e1                colorBalance
                0x008001e4                AT_currentMode
                0x008001e5                receiveBuffer
                0x00800221                dataG
                0x00800224                PROVIDE (__bss_end, .)
                0x00000fe6                __data_load_start = LOADADDR (.data)
                0x00001082                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800224        0x0
                0x00800224                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800224                PROVIDE (__noinit_end, .)
                0x00800224                _end = .
                0x00800224                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 RGBLEDwButtons.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 AVRLib/ATCommands.o
 .comment       0x00000000       0x12 AVRLib/SPI.o
 .comment       0x00000000       0x12 AVRLib/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x248
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x60 RGBLEDwButtons.o
 .debug_aranges
                0x00000060       0x70 AVRLib/ATCommands.o
 .debug_aranges
                0x000000d0       0x60 AVRLib/SPI.o
 .debug_aranges
                0x00000130       0x78 AVRLib/USART.o
 .debug_aranges
                0x000001a8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x000001c8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x000001e8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x00000208       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000228       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x2290
 *(.debug_info)
 .debug_info    0x00000000      0xb6e RGBLEDwButtons.o
 .debug_info    0x00000b6e      0xbc0 AVRLib/ATCommands.o
 .debug_info    0x0000172e      0x389 AVRLib/SPI.o
 .debug_info    0x00001ab7      0x423 AVRLib/USART.o
 .debug_info    0x00001eda       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_info    0x00001f98       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_info    0x00002056       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x00002114       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x000021d2       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x863
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x35d RGBLEDwButtons.o
 .debug_abbrev  0x0000035d      0x1e0 AVRLib/ATCommands.o
 .debug_abbrev  0x0000053d      0x14f AVRLib/SPI.o
 .debug_abbrev  0x0000068c      0x173 AVRLib/USART.o
 .debug_abbrev  0x000007ff       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x00000813       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x00000827       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x0000083b       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000084f       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x962
 *(.debug_line)
 .debug_line    0x00000000      0x2ed RGBLEDwButtons.o
 .debug_line    0x000002ed      0x1cf AVRLib/ATCommands.o
 .debug_line    0x000004bc      0x13f AVRLib/SPI.o
 .debug_line    0x000005fb      0x184 AVRLib/USART.o
 .debug_line    0x0000077f       0x62 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_line    0x000007e1       0x6a /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_line    0x0000084b       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x000008a3       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x00000904       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x58c
 *(.debug_frame)
 .debug_frame   0x00000000      0x1d8 RGBLEDwButtons.o
 .debug_frame   0x000001d8      0x130 AVRLib/ATCommands.o
 .debug_frame   0x00000308      0x118 AVRLib/SPI.o
 .debug_frame   0x00000420      0x16c AVRLib/USART.o

.debug_str      0x00000000      0x77c
 *(.debug_str)
 .debug_str     0x00000000      0x3ea RGBLEDwButtons.o
                                0x430 (size before relaxing)
 .debug_str     0x000003ea      0x21c AVRLib/ATCommands.o
                                0x3d8 (size before relaxing)
 .debug_str     0x00000606       0xad AVRLib/SPI.o
                                0x21c (size before relaxing)
 .debug_str     0x000006b3       0xc9 AVRLib/USART.o
                                0x23f (size before relaxing)

.debug_loc      0x00000000     0x169c
 *(.debug_loc)
 .debug_loc     0x00000000      0x668 RGBLEDwButtons.o
 .debug_loc     0x00000668      0x65f AVRLib/ATCommands.o
 .debug_loc     0x00000cc7      0x403 AVRLib/SPI.o
 .debug_loc     0x000010ca      0x5d2 AVRLib/USART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x198
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x80 RGBLEDwButtons.o
 .debug_ranges  0x00000080       0x60 AVRLib/ATCommands.o
 .debug_ranges  0x000000e0       0x50 AVRLib/SPI.o
 .debug_ranges  0x00000130       0x68 AVRLib/USART.o

.debug_macro
 *(.debug_macro)
OUTPUT(RGBLEDwButtons.elf elf32-avr)
LOAD linker stubs
