Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              AVRLib/USART.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              AVRLib/USART.o (__udivmodhi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              RGBLEDwButtons.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              RGBLEDwButtons.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ssid                0x1e              RGBLEDwButtons.o
iReceiveBuffer      0x1               RGBLEDwButtons.o
iCommands           0x1               RGBLEDwButtons.o
dataR               0x3               RGBLEDwButtons.o
pswd                0x1e              RGBLEDwButtons.o
dataB               0x3               RGBLEDwButtons.o
errorCount          0x1               RGBLEDwButtons.o
colorBalance        0x3               RGBLEDwButtons.o
AT_currentMode      0x1               RGBLEDwButtons.o
receiveBuffer       0x3c              RGBLEDwButtons.o
dataG               0x3               RGBLEDwButtons.o

Discarded input sections

 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .text          0x00000000        0x0 RGBLEDwButtons.o
 .bss           0x00000000        0x0 RGBLEDwButtons.o
 .text          0x00000000        0x0 AVRLib/ATCommands.o
 .bss           0x00000000        0x0 AVRLib/ATCommands.o
 .rodata.sn     0x00000000        0x2 AVRLib/ATCommands.o
 .text          0x00000000        0x0 AVRLib/I2C.o
 .bss           0x00000000        0x0 AVRLib/I2C.o
 .text          0x00000000        0x0 AVRLib/SPI.o
 .bss           0x00000000        0x0 AVRLib/SPI.o
 .text.EEPROM_readByte
                0x00000000       0x24 AVRLib/SPI.o
 .text.EEPROM_writeByte
                0x00000000       0x34 AVRLib/SPI.o
 .text          0x00000000        0x0 AVRLib/USART.o
 .bss           0x00000000        0x0 AVRLib/USART.o
 .text.receiveByte
                0x00000000        0xe AVRLib/USART.o
 .text.printVolatileString
                0x00000000       0x28 AVRLib/USART.o
 .text.readString
                0x00000000       0x58 AVRLib/USART.o
 .text.printWord
                0x00000000       0x76 AVRLib/USART.o
 .text.printBinaryByte
                0x00000000       0x3c AVRLib/USART.o
 .text.nibbleToHexCharacter
                0x00000000        0xc AVRLib/USART.o
 .text.printHexByte
                0x00000000       0x1e AVRLib/USART.o
 .text.getNumber
                0x00000000       0x4a AVRLib/USART.o
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000       0x28 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
LOAD RGBLEDwButtons.o
LOAD AVRLib/ATCommands.o
LOAD AVRLib/I2C.o
LOAD AVRLib/SPI.o
LOAD AVRLib/USART.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x12a2
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data.AT_cipclose
                0x00000068        0xd AVRLib/ATCommands.o
                0x00000068                AT_cipclose
 .progmem.data.AT_cipstart
                0x00000075       0x4b AVRLib/ATCommands.o
                0x00000075                AT_cipstart
 .progmem.data.AT_rst
                0x000000c0        0x9 AVRLib/ATCommands.o
                0x000000c0                AT_rst
 .progmem.data.AT_cipserver
                0x000000c9        0xe AVRLib/ATCommands.o
                0x000000c9                AT_cipserver
 .progmem.data.AT_cipmux
                0x000000d7        0xe AVRLib/ATCommands.o
                0x000000d7                AT_cipmux
 .progmem.data.AT_cipsend
                0x000000e5        0xc AVRLib/ATCommands.o
                0x000000e5                AT_cipsend
 .progmem.data.AT_cwjap_cur
                0x000000f1        0xf AVRLib/ATCommands.o
                0x000000f1                AT_cwjap_cur
 .progmem.data.AT_cwmode_cur
                0x00000100        0xf AVRLib/ATCommands.o
                0x00000100                AT_cwmode_cur
 .progmem.data.AT_WP_error
                0x0000010f       0x1f AVRLib/ATCommands.o
                0x0000010f                AT_WP_error
 .progmem.data.AT_WP_submit
                0x0000012e       0x65 AVRLib/ATCommands.o
                0x0000012e                AT_WP_submit
 .progmem.data.AT_WP_home
                0x00000193       0xf2 AVRLib/ATCommands.o
                0x00000193                AT_WP_home
 .progmem.data.AT_port
                0x00000285        0x3 AVRLib/ATCommands.o
                0x00000285                AT_port
 .progmem.data.AT_TCPContentLength
                0x00000288       0x14 AVRLib/ATCommands.o
                0x00000288                AT_TCPContentLength
 .progmem.data.AT_TCPHostText
                0x0000029c       0x32 AVRLib/ATCommands.o
                0x0000029c                AT_TCPHostText
 .progmem.data.AT_HTTPver
                0x000002ce        0xc AVRLib/ATCommands.o
                0x000002ce                AT_HTTPver
 .progmem.data.AT_requestTypeGet
                0x000002da        0x5 AVRLib/ATCommands.o
                0x000002da                AT_requestTypeGet
 .progmem.data.AT_requestTypePost
                0x000002df        0x6 AVRLib/ATCommands.o
                0x000002df                AT_requestTypePost
 .progmem.data.AT_setBlue
                0x000002e5        0x4 AVRLib/ATCommands.o
                0x000002e5                AT_setBlue
 .progmem.data.AT_setGreen
                0x000002e9        0x4 AVRLib/ATCommands.o
                0x000002e9                AT_setGreen
 .progmem.data.AT_setRed
                0x000002ed        0x4 AVRLib/ATCommands.o
                0x000002ed                AT_setRed
 .progmem.data.AT_setColor
                0x000002f1        0xd AVRLib/ATCommands.o
                0x000002f1                AT_setColor
 .progmem.data.AT_getColor
                0x000002fe        0xd AVRLib/ATCommands.o
                0x000002fe                AT_getColor
 .progmem.data.AT_terminator
                0x0000030b        0x4 AVRLib/ATCommands.o
                0x0000030b                AT_terminator
 .progmem.data.AT_separator
                0x0000030f        0x4 AVRLib/ATCommands.o
                0x0000030f                AT_separator
                0x00000314                . = ALIGN (0x2)
 *fill*         0x00000313        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000314                __ctors_start = .
 *(.ctors)
                0x00000314                __ctors_end = .
                0x00000314                __dtors_start = .
 *(.dtors)
                0x00000314                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000314        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000314                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000314        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000320       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000320                __do_copy_data
 .init4         0x00000336       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x00000336                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000346        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000034e        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x0000034e                __vector_20
                0x0000034e                __vector_1
                0x0000034e                __vector_24
                0x0000034e                __bad_interrupt
                0x0000034e                __vector_6
                0x0000034e                __vector_3
                0x0000034e                __vector_23
                0x0000034e                __vector_25
                0x0000034e                __vector_13
                0x0000034e                __vector_17
                0x0000034e                __vector_19
                0x0000034e                __vector_7
                0x0000034e                __vector_5
                0x0000034e                __vector_9
                0x0000034e                __vector_2
                0x0000034e                __vector_21
                0x0000034e                __vector_15
                0x0000034e                __vector_8
                0x0000034e                __vector_14
                0x0000034e                __vector_10
                0x0000034e                __vector_16
                0x0000034e                __vector_22
                0x00000352                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_4
                0x00000352       0x44 RGBLEDwButtons.o
                0x00000352                __vector_4
 .text.setupCapTouch
                0x00000396      0x124 RGBLEDwButtons.o
                0x00000396                setupCapTouch
 .text.startup.main
                0x000004ba      0x37e RGBLEDwButtons.o
                0x000004ba                main
 .text.clearBuffer
                0x00000838       0x12 RGBLEDwButtons.o
                0x00000838                clearBuffer
 .text.__vector_11
                0x0000084a       0x8c RGBLEDwButtons.o
                0x0000084a                __vector_11
 .text.__vector_12
                0x000008d6       0x78 RGBLEDwButtons.o
                0x000008d6                __vector_12
 .text.compareString
                0x0000094e       0x1e RGBLEDwButtons.o
                0x0000094e                compareString
 .text.get_SSID_PSWD_fromPartialQueryString
                0x0000096c       0x86 RGBLEDwButtons.o
                0x0000096c                get_SSID_PSWD_fromPartialQueryString
 .text.strToUInt8
                0x000009f2       0x62 RGBLEDwButtons.o
                0x000009f2                strToUInt8
 .text.__vector_18
                0x00000a54      0x35e RGBLEDwButtons.o
                0x00000a54                __vector_18
 .text.transmitFromPGMSpace
                0x00000db2       0x4a AVRLib/ATCommands.o
                0x00000db2                transmitFromPGMSpace
 .text.ATsetCurrentWifiMode
                0x00000dfc       0x2a AVRLib/ATCommands.o
                0x00000dfc                ATsetCurrentWifiMode
 .text.ATconnectToAPI
                0x00000e26       0x40 AVRLib/ATCommands.o
                0x00000e26                ATconnectToAPI
 .text.ATsetMultipleConnections
                0x00000e66        0xa AVRLib/ATCommands.o
                0x00000e66                ATsetMultipleConnections
 .text.ATsetupServer
                0x00000e70       0x40 AVRLib/ATCommands.o
                0x00000e70                ATsetupServer
 .text.ATReset  0x00000eb0       0x1e AVRLib/ATCommands.o
                0x00000eb0                ATReset
 .text.ATWaitForData
                0x00000ece        0x8 AVRLib/ATCommands.o
                0x00000ece                ATWaitForData
 .text.ATTCPStart
                0x00000ed6       0x12 AVRLib/ATCommands.o
                0x00000ed6                ATTCPStart
 .text.ATSendResp
                0x00000ee8       0x6a AVRLib/ATCommands.o
                0x00000ee8                ATSendResp
 .text.ATSendData
                0x00000f52       0xf6 AVRLib/ATCommands.o
                0x00000f52                ATSendData
 .text.ATClose  0x00001048       0x2c AVRLib/ATCommands.o
                0x00001048                ATClose
 .text.initI2C  0x00001074       0x1c AVRLib/I2C.o
                0x00001074                initI2C
 .text.waitUntilTWIReady
                0x00001090        0xa AVRLib/I2C.o
                0x00001090                waitUntilTWIReady
 .text.i2cSend  0x0000109a       0x24 AVRLib/I2C.o
                0x0000109a                i2cSend
 .text.i2cReadAck
                0x000010be       0x10 AVRLib/I2C.o
                0x000010be                i2cReadAck
 .text.i2cReadNack
                0x000010ce       0x10 AVRLib/I2C.o
                0x000010ce                i2cReadNack
 .text.initSPI_Master
                0x000010de       0x14 AVRLib/SPI.o
                0x000010de                initSPI_Master
 .text.SPI_tradeByte
                0x000010f2        0xa AVRLib/SPI.o
                0x000010f2                SPI_tradeByte
 .text.EEPROM_readStatus
                0x000010fc       0x14 AVRLib/SPI.o
                0x000010fc                EEPROM_readStatus
 .text.EEPROM_sendAddress
                0x00001110       0x12 AVRLib/SPI.o
                0x00001110                EEPROM_sendAddress
 .text.EEPROM_readPage
                0x00001122       0x6a AVRLib/SPI.o
                0x00001122                EEPROM_readPage
 .text.EEPROM_writeEnable
                0x0000118c        0xc AVRLib/SPI.o
                0x0000118c                EEPROM_writeEnable
 .text.EEPROM_writePage
                0x00001198       0x66 AVRLib/SPI.o
                0x00001198                EEPROM_writePage
 .text.initUSART
                0x000011fe       0x22 AVRLib/USART.o
                0x000011fe                initUSART
 .text.transmitByte
                0x00001220        0xe AVRLib/USART.o
                0x00001220                transmitByte
 .text.printString
                0x0000122e       0x26 AVRLib/USART.o
                0x0000122e                printString
 .text.printByte
                0x00001254       0x32 AVRLib/USART.o
                0x00001254                printByte
 .text.libgcc.div
                0x00001286       0x18 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                0x00001286                __udivmodqi4
                0x0000129e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000129e        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x0000129e                exit
                0x0000129e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000129e        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000012a2                _etext = .

.data           0x00800100       0xba load address 0x000012a2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 RGBLEDwButtons.o
 .data          0x00800100        0x0 AVRLib/ATCommands.o
 .data          0x00800100        0x0 AVRLib/I2C.o
 .data          0x00800100        0x0 AVRLib/SPI.o
 .data          0x00800100        0x0 AVRLib/USART.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.TCPReqCommands
                0x00800100       0x18 RGBLEDwButtons.o
                0x00800100                TCPReqCommands
 .data.initCommands
                0x00800118       0x48 RGBLEDwButtons.o
                0x00800118                initCommands
 .data.linkID   0x00800160        0x2 RGBLEDwButtons.o
                0x00800160                linkID
 .data.nextCommand
                0x00800162        0x1 RGBLEDwButtons.o
                0x00800162                nextCommand
 *(.rodata)
 .rodata        0x00800163       0x17 RGBLEDwButtons.o
 *(.rodata*)
 .rodata.str1.1
                0x0080017a       0x38 RGBLEDwButtons.o
                                 0x41 (size before relaxing)
 .rodata.str1.1
                0x008001b2        0x8 AVRLib/ATCommands.o
                                  0xa (size before relaxing)
 *(.gnu.linkonce.d*)
                0x008001ba                . = ALIGN (0x2)
                0x008001ba                _edata = .
                0x008001ba                PROVIDE (__data_end, .)

.bss            0x008001ba       0x88
                0x008001ba                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001ba       0x88 RGBLEDwButtons.o
                0x008001ba                ssid
                0x008001d8                iReceiveBuffer
                0x008001d9                iCommands
                0x008001da                dataR
                0x008001dd                pswd
                0x008001fb                dataB
                0x008001fe                errorCount
                0x008001ff                colorBalance
                0x00800202                AT_currentMode
                0x00800203                receiveBuffer
                0x0080023f                dataG
                0x00800242                PROVIDE (__bss_end, .)
                0x000012a2                __data_load_start = LOADADDR (.data)
                0x0000135c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800242        0x0
                0x00800242                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800242                PROVIDE (__noinit_end, .)
                0x00800242                _end = .
                0x00800242                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 RGBLEDwButtons.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 AVRLib/ATCommands.o
 .comment       0x00000000       0x12 AVRLib/I2C.o
 .comment       0x00000000       0x12 AVRLib/SPI.o
 .comment       0x00000000       0x12 AVRLib/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x290
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x68 RGBLEDwButtons.o
 .debug_aranges
                0x00000068       0x70 AVRLib/ATCommands.o
 .debug_aranges
                0x000000d8       0x40 AVRLib/I2C.o
 .debug_aranges
                0x00000118       0x60 AVRLib/SPI.o
 .debug_aranges
                0x00000178       0x78 AVRLib/USART.o
 .debug_aranges
                0x000001f0       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x00000210       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x00000230       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x00000250       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000270       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x27b9
 *(.debug_info)
 .debug_info    0x00000000      0xf81 RGBLEDwButtons.o
 .debug_info    0x00000f81      0xbc0 AVRLib/ATCommands.o
 .debug_info    0x00001b41      0x116 AVRLib/I2C.o
 .debug_info    0x00001c57      0x389 AVRLib/SPI.o
 .debug_info    0x00001fe0      0x423 AVRLib/USART.o
 .debug_info    0x00002403       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_info    0x000024c1       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_info    0x0000257f       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x0000263d       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x000026fb       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x932
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x375 RGBLEDwButtons.o
 .debug_abbrev  0x00000375      0x1e0 AVRLib/ATCommands.o
 .debug_abbrev  0x00000555       0xb7 AVRLib/I2C.o
 .debug_abbrev  0x0000060c      0x14f AVRLib/SPI.o
 .debug_abbrev  0x0000075b      0x173 AVRLib/USART.o
 .debug_abbrev  0x000008ce       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x000008e2       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x000008f6       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x0000090a       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000091e       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0xaf1
 *(.debug_line)
 .debug_line    0x00000000      0x3ba RGBLEDwButtons.o
 .debug_line    0x000003ba      0x1cf AVRLib/ATCommands.o
 .debug_line    0x00000589       0xc2 AVRLib/I2C.o
 .debug_line    0x0000064b      0x13f AVRLib/SPI.o
 .debug_line    0x0000078a      0x184 AVRLib/USART.o
 .debug_line    0x0000090e       0x62 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_line    0x00000970       0x6a /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_line    0x000009da       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x00000a32       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x00000a93       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x620
 *(.debug_frame)
 .debug_frame   0x00000000      0x1f8 RGBLEDwButtons.o
 .debug_frame   0x000001f8      0x130 AVRLib/ATCommands.o
 .debug_frame   0x00000328       0x74 AVRLib/I2C.o
 .debug_frame   0x0000039c      0x118 AVRLib/SPI.o
 .debug_frame   0x000004b4      0x16c AVRLib/USART.o

.debug_str      0x00000000      0x7e8
 *(.debug_str)
 .debug_str     0x00000000      0x455 RGBLEDwButtons.o
                                0x4a1 (size before relaxing)
 .debug_str     0x00000455      0x210 AVRLib/ATCommands.o
                                0x3d8 (size before relaxing)
 .debug_str     0x00000665       0x12 AVRLib/I2C.o
                                0x181 (size before relaxing)
 .debug_str     0x00000677       0xad AVRLib/SPI.o
                                0x21c (size before relaxing)
 .debug_str     0x00000724       0xc4 AVRLib/USART.o
                                0x23f (size before relaxing)

.debug_loc      0x00000000     0x187f
 *(.debug_loc)
 .debug_loc     0x00000000      0x7e2 RGBLEDwButtons.o
 .debug_loc     0x000007e2      0x65f AVRLib/ATCommands.o
 .debug_loc     0x00000e41       0x69 AVRLib/I2C.o
 .debug_loc     0x00000eaa      0x403 AVRLib/SPI.o
 .debug_loc     0x000012ad      0x5d2 AVRLib/USART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x1e8
 *(.debug_ranges)
 .debug_ranges  0x00000000       0xa0 RGBLEDwButtons.o
 .debug_ranges  0x000000a0       0x60 AVRLib/ATCommands.o
 .debug_ranges  0x00000100       0x30 AVRLib/I2C.o
 .debug_ranges  0x00000130       0x50 AVRLib/SPI.o
 .debug_ranges  0x00000180       0x68 AVRLib/USART.o

.debug_macro
 *(.debug_macro)
OUTPUT(RGBLEDwButtons.elf elf32-avr)
LOAD linker stubs
