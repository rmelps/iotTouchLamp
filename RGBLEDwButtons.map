Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              AVRLib/USART.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              AVRLib/USART.o (__udivmodhi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              RGBLEDwButtons.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              RGBLEDwButtons.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ssid                0x1e              RGBLEDwButtons.o
iReceiveBuffer      0x1               RGBLEDwButtons.o
iCommands           0x1               RGBLEDwButtons.o
dataR               0x3               RGBLEDwButtons.o
pswd                0x1e              RGBLEDwButtons.o
dataB               0x3               RGBLEDwButtons.o
errorCount          0x1               RGBLEDwButtons.o
colorBalance        0x3               RGBLEDwButtons.o
currentOp           0x7               RGBLEDwButtons.o
AT_currentMode      0x1               RGBLEDwButtons.o
receiveBuffer       0x3c              RGBLEDwButtons.o
dataG               0x3               RGBLEDwButtons.o

Discarded input sections

 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .text          0x00000000        0x0 RGBLEDwButtons.o
 .bss           0x00000000        0x0 RGBLEDwButtons.o
 .text          0x00000000        0x0 AVRLib/ATCommands.o
 .bss           0x00000000        0x0 AVRLib/ATCommands.o
 .rodata.sn     0x00000000        0x2 AVRLib/ATCommands.o
 .text          0x00000000        0x0 AVRLib/I2C.o
 .bss           0x00000000        0x0 AVRLib/I2C.o
 .text          0x00000000        0x0 AVRLib/SPI.o
 .bss           0x00000000        0x0 AVRLib/SPI.o
 .text.EEPROM_readByte
                0x00000000       0x24 AVRLib/SPI.o
 .text.EEPROM_writeByte
                0x00000000       0x34 AVRLib/SPI.o
 .text          0x00000000        0x0 AVRLib/USART.o
 .bss           0x00000000        0x0 AVRLib/USART.o
 .text.receiveByte
                0x00000000        0xe AVRLib/USART.o
 .text.printVolatileString
                0x00000000       0x28 AVRLib/USART.o
 .text.readString
                0x00000000       0x58 AVRLib/USART.o
 .text.printWord
                0x00000000       0x76 AVRLib/USART.o
 .text.printBinaryByte
                0x00000000       0x3c AVRLib/USART.o
 .text.nibbleToHexCharacter
                0x00000000        0xc AVRLib/USART.o
 .text.printHexByte
                0x00000000       0x1e AVRLib/USART.o
 .text.getNumber
                0x00000000       0x4a AVRLib/USART.o
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000       0x28 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
LOAD RGBLEDwButtons.o
LOAD AVRLib/ATCommands.o
LOAD AVRLib/I2C.o
LOAD AVRLib/SPI.o
LOAD AVRLib/USART.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x14fe
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data.AT_cipclose
                0x00000068        0xd AVRLib/ATCommands.o
                0x00000068                AT_cipclose
 .progmem.data.AT_cipstart
                0x00000075       0x4b AVRLib/ATCommands.o
                0x00000075                AT_cipstart
 .progmem.data.AT_rst
                0x000000c0        0x9 AVRLib/ATCommands.o
                0x000000c0                AT_rst
 .progmem.data.AT_cipserver
                0x000000c9        0xe AVRLib/ATCommands.o
                0x000000c9                AT_cipserver
 .progmem.data.AT_cipmux
                0x000000d7        0xe AVRLib/ATCommands.o
                0x000000d7                AT_cipmux
 .progmem.data.AT_cipsend
                0x000000e5        0xc AVRLib/ATCommands.o
                0x000000e5                AT_cipsend
 .progmem.data.AT_cwjap_cur
                0x000000f1        0xf AVRLib/ATCommands.o
                0x000000f1                AT_cwjap_cur
 .progmem.data.AT_cwmode_cur
                0x00000100        0xf AVRLib/ATCommands.o
                0x00000100                AT_cwmode_cur
 .progmem.data.AT_WP_error
                0x0000010f       0x1f AVRLib/ATCommands.o
                0x0000010f                AT_WP_error
 .progmem.data.AT_WP_submit
                0x0000012e       0x65 AVRLib/ATCommands.o
                0x0000012e                AT_WP_submit
 .progmem.data.AT_WP_home
                0x00000193       0xf2 AVRLib/ATCommands.o
                0x00000193                AT_WP_home
 .progmem.data.AT_port
                0x00000285        0x3 AVRLib/ATCommands.o
                0x00000285                AT_port
 .progmem.data.AT_TCPContentLength
                0x00000288       0x14 AVRLib/ATCommands.o
                0x00000288                AT_TCPContentLength
 .progmem.data.AT_TCPHostText
                0x0000029c       0x32 AVRLib/ATCommands.o
                0x0000029c                AT_TCPHostText
 .progmem.data.AT_HTTPver
                0x000002ce        0xc AVRLib/ATCommands.o
                0x000002ce                AT_HTTPver
 .progmem.data.AT_requestTypeGet
                0x000002da        0x5 AVRLib/ATCommands.o
                0x000002da                AT_requestTypeGet
 .progmem.data.AT_requestTypePost
                0x000002df        0x6 AVRLib/ATCommands.o
                0x000002df                AT_requestTypePost
 .progmem.data.AT_setBlue
                0x000002e5        0x4 AVRLib/ATCommands.o
                0x000002e5                AT_setBlue
 .progmem.data.AT_setGreen
                0x000002e9        0x4 AVRLib/ATCommands.o
                0x000002e9                AT_setGreen
 .progmem.data.AT_setRed
                0x000002ed        0x4 AVRLib/ATCommands.o
                0x000002ed                AT_setRed
 .progmem.data.AT_setColor
                0x000002f1        0xd AVRLib/ATCommands.o
                0x000002f1                AT_setColor
 .progmem.data.AT_getColor
                0x000002fe        0xd AVRLib/ATCommands.o
                0x000002fe                AT_getColor
 .progmem.data.AT_terminator
                0x0000030b        0x4 AVRLib/ATCommands.o
                0x0000030b                AT_terminator
 .progmem.data.AT_separator
                0x0000030f        0x4 AVRLib/ATCommands.o
                0x0000030f                AT_separator
                0x00000314                . = ALIGN (0x2)
 *fill*         0x00000313        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000314                __ctors_start = .
 *(.ctors)
                0x00000314                __ctors_end = .
                0x00000314                __dtors_start = .
 *(.dtors)
                0x00000314                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000314        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000314                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000314        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000320       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000320                __do_copy_data
 .init4         0x00000336       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x00000336                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000346        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000034e        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x0000034e                __vector_20
                0x0000034e                __vector_1
                0x0000034e                __bad_interrupt
                0x0000034e                __vector_6
                0x0000034e                __vector_3
                0x0000034e                __vector_23
                0x0000034e                __vector_25
                0x0000034e                __vector_13
                0x0000034e                __vector_17
                0x0000034e                __vector_19
                0x0000034e                __vector_7
                0x0000034e                __vector_5
                0x0000034e                __vector_9
                0x0000034e                __vector_2
                0x0000034e                __vector_21
                0x0000034e                __vector_15
                0x0000034e                __vector_8
                0x0000034e                __vector_14
                0x0000034e                __vector_10
                0x0000034e                __vector_16
                0x0000034e                __vector_22
                0x00000352                . = ALIGN (0x2)
 *(.text.*)
 .text.clearBuffer
                0x00000352       0x12 RGBLEDwButtons.o
                0x00000352                clearBuffer
 .text.__vector_11
                0x00000364       0x8c RGBLEDwButtons.o
                0x00000364                __vector_11
 .text.__vector_12
                0x000003f0       0x78 RGBLEDwButtons.o
                0x000003f0                __vector_12
 .text.compareString
                0x00000468       0x1e RGBLEDwButtons.o
                0x00000468                compareString
 .text.get_SSID_PSWD_fromPartialQueryString
                0x00000486       0x86 RGBLEDwButtons.o
                0x00000486                get_SSID_PSWD_fromPartialQueryString
 .text.strToUInt8
                0x0000050c       0x62 RGBLEDwButtons.o
                0x0000050c                strToUInt8
 .text.__vector_18
                0x0000056e      0x35e RGBLEDwButtons.o
                0x0000056e                __vector_18
 .text.resetCurrentOp
                0x000008cc        0x8 RGBLEDwButtons.o
                0x000008cc                resetCurrentOp
 .text.__vector_24
                0x000008d4      0x244 RGBLEDwButtons.o
                0x000008d4                __vector_24
 .text.configureCurrentOp
                0x00000b18       0x26 RGBLEDwButtons.o
                0x00000b18                configureCurrentOp
 .text.__vector_4
                0x00000b3e       0xa2 RGBLEDwButtons.o
                0x00000b3e                __vector_4
 .text.setupCapTouch
                0x00000be0      0x17e RGBLEDwButtons.o
                0x00000be0                setupCapTouch
 .text.startup.main
                0x00000d5e      0x226 RGBLEDwButtons.o
                0x00000d5e                main
 .text.transmitFromPGMSpace
                0x00000f84       0x4a AVRLib/ATCommands.o
                0x00000f84                transmitFromPGMSpace
 .text.ATsetCurrentWifiMode
                0x00000fce       0x2a AVRLib/ATCommands.o
                0x00000fce                ATsetCurrentWifiMode
 .text.ATconnectToAPI
                0x00000ff8       0x40 AVRLib/ATCommands.o
                0x00000ff8                ATconnectToAPI
 .text.ATsetMultipleConnections
                0x00001038        0xa AVRLib/ATCommands.o
                0x00001038                ATsetMultipleConnections
 .text.ATsetupServer
                0x00001042       0x40 AVRLib/ATCommands.o
                0x00001042                ATsetupServer
 .text.ATReset  0x00001082       0x1e AVRLib/ATCommands.o
                0x00001082                ATReset
 .text.ATWaitForData
                0x000010a0        0x8 AVRLib/ATCommands.o
                0x000010a0                ATWaitForData
 .text.ATTCPStart
                0x000010a8       0x12 AVRLib/ATCommands.o
                0x000010a8                ATTCPStart
 .text.ATSendResp
                0x000010ba       0x6a AVRLib/ATCommands.o
                0x000010ba                ATSendResp
 .text.ATSendData
                0x00001124       0xf6 AVRLib/ATCommands.o
                0x00001124                ATSendData
 .text.ATClose  0x0000121a       0x2c AVRLib/ATCommands.o
                0x0000121a                ATClose
 .text.initI2C  0x00001246       0x1c AVRLib/I2C.o
                0x00001246                initI2C
 .text.i2cStartTransmission
                0x00001262       0x14 AVRLib/I2C.o
                0x00001262                i2cStartTransmission
 .text.i2cStopTransmission
                0x00001276       0x14 AVRLib/I2C.o
                0x00001276                i2cStopTransmission
 .text.i2cSlaveTransmit
                0x0000128a       0x2a AVRLib/I2C.o
                0x0000128a                i2cSlaveTransmit
 .text.i2cDataTransmit
                0x000012b4       0x26 AVRLib/I2C.o
                0x000012b4                i2cDataTransmit
 .text.i2cAddressTransmit
                0x000012da       0x20 AVRLib/I2C.o
                0x000012da                i2cAddressTransmit
 .text.i2cSendWrite
                0x000012fa       0x22 AVRLib/I2C.o
                0x000012fa                i2cSendWrite
 .text.i2cRead  0x0000131c       0x1e AVRLib/I2C.o
                0x0000131c                i2cRead
 .text.initSPI_Master
                0x0000133a       0x14 AVRLib/SPI.o
                0x0000133a                initSPI_Master
 .text.SPI_tradeByte
                0x0000134e        0xa AVRLib/SPI.o
                0x0000134e                SPI_tradeByte
 .text.EEPROM_readStatus
                0x00001358       0x14 AVRLib/SPI.o
                0x00001358                EEPROM_readStatus
 .text.EEPROM_sendAddress
                0x0000136c       0x12 AVRLib/SPI.o
                0x0000136c                EEPROM_sendAddress
 .text.EEPROM_readPage
                0x0000137e       0x6a AVRLib/SPI.o
                0x0000137e                EEPROM_readPage
 .text.EEPROM_writeEnable
                0x000013e8        0xc AVRLib/SPI.o
                0x000013e8                EEPROM_writeEnable
 .text.EEPROM_writePage
                0x000013f4       0x66 AVRLib/SPI.o
                0x000013f4                EEPROM_writePage
 .text.initUSART
                0x0000145a       0x22 AVRLib/USART.o
                0x0000145a                initUSART
 .text.transmitByte
                0x0000147c        0xe AVRLib/USART.o
                0x0000147c                transmitByte
 .text.printString
                0x0000148a       0x26 AVRLib/USART.o
                0x0000148a                printString
 .text.printByte
                0x000014b0       0x32 AVRLib/USART.o
                0x000014b0                printByte
 .text.libgcc.div
                0x000014e2       0x18 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                0x000014e2                __udivmodqi4
                0x000014fa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000014fa        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x000014fa                exit
                0x000014fa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000014fa        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000014fe                _etext = .

.data           0x00800100       0xd8 load address 0x000014fe
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 RGBLEDwButtons.o
 .data          0x00800100        0x0 AVRLib/ATCommands.o
 .data          0x00800100        0x0 AVRLib/I2C.o
 .data          0x00800100        0x0 AVRLib/SPI.o
 .data          0x00800100        0x0 AVRLib/USART.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.TCPReqCommands
                0x00800100       0x18 RGBLEDwButtons.o
                0x00800100                TCPReqCommands
 .data.initCommands
                0x00800118       0x48 RGBLEDwButtons.o
                0x00800118                initCommands
 .data.linkID   0x00800160        0x2 RGBLEDwButtons.o
                0x00800160                linkID
 .data.nextCommand
                0x00800162        0x1 RGBLEDwButtons.o
                0x00800162                nextCommand
 *(.rodata)
 .rodata        0x00800163       0x15 RGBLEDwButtons.o
 .rodata        0x00800178       0x27 AVRLib/I2C.o
 *(.rodata*)
 .rodata.str1.1
                0x0080019f       0x30 RGBLEDwButtons.o
                                 0x39 (size before relaxing)
 .rodata.str1.1
                0x008001cf        0x8 AVRLib/ATCommands.o
                                  0xa (size before relaxing)
 *(.gnu.linkonce.d*)
                0x008001d8                . = ALIGN (0x2)
 *fill*         0x008001d7        0x1 
                0x008001d8                _edata = .
                0x008001d8                PROVIDE (__data_end, .)

.bss            0x008001d8       0x8f
                0x008001d8                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001d8       0x8f RGBLEDwButtons.o
                0x008001d8                ssid
                0x008001f6                iReceiveBuffer
                0x008001f7                iCommands
                0x008001f8                dataR
                0x008001fb                pswd
                0x00800219                dataB
                0x0080021c                errorCount
                0x0080021d                colorBalance
                0x00800220                currentOp
                0x00800227                AT_currentMode
                0x00800228                receiveBuffer
                0x00800264                dataG
                0x00800267                PROVIDE (__bss_end, .)
                0x000014fe                __data_load_start = LOADADDR (.data)
                0x000015d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800267        0x0
                0x00800267                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800267                PROVIDE (__noinit_end, .)
                0x00800267                _end = .
                0x00800267                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 RGBLEDwButtons.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 AVRLib/ATCommands.o
 .comment       0x00000000       0x12 AVRLib/I2C.o
 .comment       0x00000000       0x12 AVRLib/SPI.o
 .comment       0x00000000       0x12 AVRLib/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x2c0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x80 RGBLEDwButtons.o
 .debug_aranges
                0x00000080       0x70 AVRLib/ATCommands.o
 .debug_aranges
                0x000000f0       0x58 AVRLib/I2C.o
 .debug_aranges
                0x00000148       0x60 AVRLib/SPI.o
 .debug_aranges
                0x000001a8       0x78 AVRLib/USART.o
 .debug_aranges
                0x00000220       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x00000240       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x00000260       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x00000280       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x000002a0       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x2bfb
 *(.debug_info)
 .debug_info    0x00000000     0x11b9 RGBLEDwButtons.o
 .debug_info    0x000011b9      0xbc0 AVRLib/ATCommands.o
 .debug_info    0x00001d79      0x320 AVRLib/I2C.o
 .debug_info    0x00002099      0x389 AVRLib/SPI.o
 .debug_info    0x00002422      0x423 AVRLib/USART.o
 .debug_info    0x00002845       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_info    0x00002903       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_info    0x000029c1       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x00002a7f       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x00002b3d       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x9da
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x375 RGBLEDwButtons.o
 .debug_abbrev  0x00000375      0x1e0 AVRLib/ATCommands.o
 .debug_abbrev  0x00000555      0x15f AVRLib/I2C.o
 .debug_abbrev  0x000006b4      0x14f AVRLib/SPI.o
 .debug_abbrev  0x00000803      0x173 AVRLib/USART.o
 .debug_abbrev  0x00000976       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x0000098a       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x0000099e       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x000009b2       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x000009c6       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0xb61
 *(.debug_line)
 .debug_line    0x00000000      0x3de RGBLEDwButtons.o
 .debug_line    0x000003de      0x1cf AVRLib/ATCommands.o
 .debug_line    0x000005ad      0x10e AVRLib/I2C.o
 .debug_line    0x000006bb      0x13f AVRLib/SPI.o
 .debug_line    0x000007fa      0x184 AVRLib/USART.o
 .debug_line    0x0000097e       0x62 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_line    0x000009e0       0x6a /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_line    0x00000a4a       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x00000aa2       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x00000b03       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x744
 *(.debug_frame)
 .debug_frame   0x00000000      0x2c0 RGBLEDwButtons.o
 .debug_frame   0x000002c0      0x130 AVRLib/ATCommands.o
 .debug_frame   0x000003f0       0xd0 AVRLib/I2C.o
 .debug_frame   0x000004c0      0x118 AVRLib/SPI.o
 .debug_frame   0x000005d8      0x16c AVRLib/USART.o

.debug_str      0x00000000      0x88e
 *(.debug_str)
 .debug_str     0x00000000      0x500 RGBLEDwButtons.o
                                0x546 (size before relaxing)
 .debug_str     0x00000500      0x210 AVRLib/ATCommands.o
                                0x3d8 (size before relaxing)
 .debug_str     0x00000710        0xd AVRLib/I2C.o
                                0x21c (size before relaxing)
 .debug_str     0x0000071d       0xad AVRLib/SPI.o
                                0x21c (size before relaxing)
 .debug_str     0x000007ca       0xc4 AVRLib/USART.o
                                0x23f (size before relaxing)

.debug_loc      0x00000000     0x1a5f
 *(.debug_loc)
 .debug_loc     0x00000000      0x878 RGBLEDwButtons.o
 .debug_loc     0x00000878      0x65f AVRLib/ATCommands.o
 .debug_loc     0x00000ed7      0x1b3 AVRLib/I2C.o
 .debug_loc     0x0000108a      0x403 AVRLib/SPI.o
 .debug_loc     0x0000148d      0x5d2 AVRLib/USART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x200
 *(.debug_ranges)
 .debug_ranges  0x00000000       0xa0 RGBLEDwButtons.o
 .debug_ranges  0x000000a0       0x60 AVRLib/ATCommands.o
 .debug_ranges  0x00000100       0x48 AVRLib/I2C.o
 .debug_ranges  0x00000148       0x50 AVRLib/SPI.o
 .debug_ranges  0x00000198       0x68 AVRLib/USART.o

.debug_macro
 *(.debug_macro)
OUTPUT(RGBLEDwButtons.elf elf32-avr)
LOAD linker stubs
