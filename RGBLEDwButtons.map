Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              AVRLib/USART.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              AVRLib/USART.o (__udivmodhi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              RGBLEDwButtons.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              RGBLEDwButtons.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

iReceiveBuffer      0x1               RGBLEDwButtons.o
iCommands           0x1               RGBLEDwButtons.o
colorBalance        0x3               RGBLEDwButtons.o
receiveBuffer       0x1e              RGBLEDwButtons.o

Discarded input sections

 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .text          0x00000000        0x0 RGBLEDwButtons.o
 .bss           0x00000000        0x0 RGBLEDwButtons.o
 .text          0x00000000        0x0 AVRLib/ATCommands.o
 .bss           0x00000000        0x0 AVRLib/ATCommands.o
 .text.ATsetMultipleConnections
                0x00000000        0x2 AVRLib/ATCommands.o
 .text.ATsetupServer
                0x00000000        0x2 AVRLib/ATCommands.o
 .text.ATReset  0x00000000        0x2 AVRLib/ATCommands.o
 .progmem.data.AT_autoconn
                0x00000000       0x10 AVRLib/ATCommands.o
 .progmem.data.AT_rst
                0x00000000        0x7 AVRLib/ATCommands.o
 .progmem.data.AT_cipserver
                0x00000000        0xe AVRLib/ATCommands.o
 .progmem.data.AT_cipmux
                0x00000000        0xe AVRLib/ATCommands.o
 .progmem.data.AT_cipsend
                0x00000000        0xc AVRLib/ATCommands.o
 .progmem.data.AT_TCPHostText
                0x00000000        0x6 AVRLib/ATCommands.o
 .progmem.data.AT_HTTPver
                0x00000000        0xb AVRLib/ATCommands.o
 .progmem.data.AT_requestType
                0x00000000        0x5 AVRLib/ATCommands.o
 .progmem.data.AT_functionAddress
                0x00000000        0x8 AVRLib/ATCommands.o
 .progmem.data.AT_hostAddress
                0x00000000       0x32 AVRLib/ATCommands.o
 .text          0x00000000        0x0 AVRLib/SPI.o
 .bss           0x00000000        0x0 AVRLib/SPI.o
 .text.EEPROM_readByte
                0x00000000       0x24 AVRLib/SPI.o
 .text.EEPROM_writeByte
                0x00000000       0x34 AVRLib/SPI.o
 .text          0x00000000        0x0 AVRLib/USART.o
 .bss           0x00000000        0x0 AVRLib/USART.o
 .text.receiveByte
                0x00000000        0xe AVRLib/USART.o
 .text.readString
                0x00000000       0x58 AVRLib/USART.o
 .text.printByte
                0x00000000       0x32 AVRLib/USART.o
 .text.printWord
                0x00000000       0x76 AVRLib/USART.o
 .text.printBinaryByte
                0x00000000       0x3c AVRLib/USART.o
 .text.nibbleToHexCharacter
                0x00000000        0xc AVRLib/USART.o
 .text.printHexByte
                0x00000000       0x1e AVRLib/USART.o
 .text.getNumber
                0x00000000       0x4a AVRLib/USART.o
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000000       0x18 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000       0x28 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
LOAD RGBLEDwButtons.o
LOAD AVRLib/ATCommands.o
LOAD AVRLib/SPI.o
LOAD AVRLib/USART.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x63a
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data.AT_cwjap_cur
                0x00000068        0xe AVRLib/ATCommands.o
                0x00000068                AT_cwjap_cur
 .progmem.data.AT_cwmode_cur
                0x00000076        0xf AVRLib/ATCommands.o
                0x00000076                AT_cwmode_cur
                0x00000086                . = ALIGN (0x2)
 *fill*         0x00000085        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000086                __ctors_start = .
 *(.ctors)
                0x00000086                __ctors_end = .
                0x00000086                __dtors_start = .
 *(.dtors)
                0x00000086                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000086        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000086                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000086        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000092       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000092                __do_copy_data
 .init4         0x000000a8       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x000000a8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000b8        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000c0        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x000000c0                __vector_20
                0x000000c0                __vector_1
                0x000000c0                __vector_24
                0x000000c0                __vector_12
                0x000000c0                __bad_interrupt
                0x000000c0                __vector_6
                0x000000c0                __vector_3
                0x000000c0                __vector_23
                0x000000c0                __vector_25
                0x000000c0                __vector_13
                0x000000c0                __vector_17
                0x000000c0                __vector_19
                0x000000c0                __vector_7
                0x000000c0                __vector_5
                0x000000c0                __vector_9
                0x000000c0                __vector_2
                0x000000c0                __vector_21
                0x000000c0                __vector_15
                0x000000c0                __vector_8
                0x000000c0                __vector_14
                0x000000c0                __vector_10
                0x000000c0                __vector_16
                0x000000c0                __vector_22
                0x000000c4                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_4
                0x000000c4       0x6a RGBLEDwButtons.o
                0x000000c4                __vector_4
 .text.__vector_11
                0x0000012e       0x6c RGBLEDwButtons.o
                0x0000012e                __vector_11
 .text.startup.main
                0x0000019a      0x164 RGBLEDwButtons.o
                0x0000019a                main
 .text.clearBuffer
                0x000002fe       0x12 RGBLEDwButtons.o
                0x000002fe                clearBuffer
 .text.compareString
                0x00000310       0x1e RGBLEDwButtons.o
                0x00000310                compareString
 .text.__vector_18
                0x0000032e       0xc4 RGBLEDwButtons.o
                0x0000032e                __vector_18
 .text.transmitFromPGMSpace
                0x000003f2       0x46 AVRLib/ATCommands.o
                0x000003f2                transmitFromPGMSpace
 .text.ATsetCurrentWifiMode
                0x00000438       0x24 AVRLib/ATCommands.o
                0x00000438                ATsetCurrentWifiMode
 .text.ATconnectToAPI
                0x0000045c       0x3c AVRLib/ATCommands.o
                0x0000045c                ATconnectToAPI
 .text.initSPI_Master
                0x00000498       0x14 AVRLib/SPI.o
                0x00000498                initSPI_Master
 .text.SPI_tradeByte
                0x000004ac        0xa AVRLib/SPI.o
                0x000004ac                SPI_tradeByte
 .text.EEPROM_readStatus
                0x000004b6       0x14 AVRLib/SPI.o
                0x000004b6                EEPROM_readStatus
 .text.EEPROM_sendAddress
                0x000004ca       0x12 AVRLib/SPI.o
                0x000004ca                EEPROM_sendAddress
 .text.EEPROM_readPage
                0x000004dc       0x6a AVRLib/SPI.o
                0x000004dc                EEPROM_readPage
 .text.EEPROM_writeEnable
                0x00000546        0xc AVRLib/SPI.o
                0x00000546                EEPROM_writeEnable
 .text.EEPROM_writePage
                0x00000552       0x66 AVRLib/SPI.o
                0x00000552                EEPROM_writePage
 .text.initUSART
                0x000005b8       0x22 AVRLib/USART.o
                0x000005b8                initUSART
 .text.transmitByte
                0x000005da        0xe AVRLib/USART.o
                0x000005da                transmitByte
 .text.printString
                0x000005e8       0x26 AVRLib/USART.o
                0x000005e8                printString
 .text.printVolatileString
                0x0000060e       0x28 AVRLib/USART.o
                0x0000060e                printVolatileString
                0x00000636                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000636        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x00000636                exit
                0x00000636                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000636        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000063a                _etext = .

.data           0x00800100       0x72 load address 0x0000063a
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 RGBLEDwButtons.o
 .data          0x00800100        0x0 AVRLib/ATCommands.o
 .data          0x00800100        0x0 AVRLib/SPI.o
 .data          0x00800100        0x0 AVRLib/USART.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.nextCommand
                0x00800100        0x1 RGBLEDwButtons.o
                0x00800100                nextCommand
 .data.commands
                0x00800101       0x12 RGBLEDwButtons.o
                0x00800101                commands
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800113       0x57 RGBLEDwButtons.o
                                 0x5a (size before relaxing)
 .rodata.str1.1
                0x0080016a        0x8 AVRLib/ATCommands.o
                                  0xd (size before relaxing)
 *(.gnu.linkonce.d*)
                0x00800172                . = ALIGN (0x2)
                0x00800172                _edata = .
                0x00800172                PROVIDE (__data_end, .)

.bss            0x00800172       0x23
                0x00800172                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800172       0x23 RGBLEDwButtons.o
                0x00800172                iReceiveBuffer
                0x00800173                iCommands
                0x00800174                colorBalance
                0x00800177                receiveBuffer
                0x00800195                PROVIDE (__bss_end, .)
                0x0000063a                __data_load_start = LOADADDR (.data)
                0x000006ac                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800195        0x0
                0x00800195                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800195                PROVIDE (__noinit_end, .)
                0x00800195                _end = .
                0x00800195                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 RGBLEDwButtons.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 AVRLib/ATCommands.o
 .comment       0x00000000       0x12 AVRLib/SPI.o
 .comment       0x00000000       0x12 AVRLib/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x208
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x48 RGBLEDwButtons.o
 .debug_aranges
                0x00000048       0x48 AVRLib/ATCommands.o
 .debug_aranges
                0x00000090       0x60 AVRLib/SPI.o
 .debug_aranges
                0x000000f0       0x78 AVRLib/USART.o
 .debug_aranges
                0x00000168       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x00000188       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x000001a8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x000001c8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x000001e8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x15fc
 *(.debug_info)
 .debug_info    0x00000000      0x61b RGBLEDwButtons.o
 .debug_info    0x0000061b      0x47f AVRLib/ATCommands.o
 .debug_info    0x00000a9a      0x389 AVRLib/SPI.o
 .debug_info    0x00000e23      0x423 AVRLib/USART.o
 .debug_info    0x00001246       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_info    0x00001304       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_info    0x000013c2       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x00001480       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x0000153e       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x72c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2b9 RGBLEDwButtons.o
 .debug_abbrev  0x000002b9      0x14d AVRLib/ATCommands.o
 .debug_abbrev  0x00000406      0x14f AVRLib/SPI.o
 .debug_abbrev  0x00000555      0x173 AVRLib/USART.o
 .debug_abbrev  0x000006c8       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x000006dc       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x000006f0       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x00000704       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x00000718       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x72d
 *(.debug_line)
 .debug_line    0x00000000      0x19b RGBLEDwButtons.o
 .debug_line    0x0000019b       0xec AVRLib/ATCommands.o
 .debug_line    0x00000287      0x13f AVRLib/SPI.o
 .debug_line    0x000003c6      0x184 AVRLib/USART.o
 .debug_line    0x0000054a       0x62 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_line    0x000005ac       0x6a /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_line    0x00000616       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x0000066e       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x000006cf       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x458
 *(.debug_frame)
 .debug_frame   0x00000000      0x124 RGBLEDwButtons.o
 .debug_frame   0x00000124       0xb0 AVRLib/ATCommands.o
 .debug_frame   0x000001d4      0x118 AVRLib/SPI.o
 .debug_frame   0x000002ec      0x16c AVRLib/USART.o

.debug_str      0x00000000      0x5bd
 *(.debug_str)
 .debug_str     0x00000000      0x311 RGBLEDwButtons.o
                                0x34a (size before relaxing)
 .debug_str     0x00000311      0x140 AVRLib/ATCommands.o
                                0x2a4 (size before relaxing)
 .debug_str     0x00000451       0xad AVRLib/SPI.o
                                0x21c (size before relaxing)
 .debug_str     0x000004fe       0xbf AVRLib/USART.o
                                0x23f (size before relaxing)

.debug_loc      0x00000000      0xf18
 *(.debug_loc)
 .debug_loc     0x00000000      0x305 RGBLEDwButtons.o
 .debug_loc     0x00000305      0x23e AVRLib/ATCommands.o
 .debug_loc     0x00000543      0x403 AVRLib/SPI.o
 .debug_loc     0x00000946      0x5d2 AVRLib/USART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x128
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x38 RGBLEDwButtons.o
 .debug_ranges  0x00000038       0x38 AVRLib/ATCommands.o
 .debug_ranges  0x00000070       0x50 AVRLib/SPI.o
 .debug_ranges  0x000000c0       0x68 AVRLib/USART.o

.debug_macro
 *(.debug_macro)
OUTPUT(RGBLEDwButtons.elf elf32-avr)
LOAD linker stubs
