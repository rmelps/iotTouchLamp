Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              AVRLib/USART.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              AVRLib/USART.o (__udivmodhi4)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              RGBLEDwButtons.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              RGBLEDwButtons.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ssid                0x1e              RGBLEDwButtons.o
iReceiveBuffer      0x1               RGBLEDwButtons.o
iCommands           0x1               RGBLEDwButtons.o
pswd                0x1e              RGBLEDwButtons.o
colorBalance        0x3               RGBLEDwButtons.o
AT_currentMode      0x1               RGBLEDwButtons.o
receiveBuffer       0x3c              RGBLEDwButtons.o

Discarded input sections

 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .text          0x00000000        0x0 RGBLEDwButtons.o
 .bss           0x00000000        0x0 RGBLEDwButtons.o
 .text          0x00000000        0x0 AVRLib/ATCommands.o
 .bss           0x00000000        0x0 AVRLib/ATCommands.o
 .text.ATTCPStart
                0x00000000        0x2 AVRLib/ATCommands.o
 .progmem.data.AT_cipstart
                0x00000000       0x14 AVRLib/ATCommands.o
 .progmem.data.AT_TCPHostText
                0x00000000        0x6 AVRLib/ATCommands.o
 .progmem.data.AT_HTTPver
                0x00000000        0xb AVRLib/ATCommands.o
 .progmem.data.AT_requestType
                0x00000000        0x5 AVRLib/ATCommands.o
 .progmem.data.AT_functionAddress
                0x00000000        0x8 AVRLib/ATCommands.o
 .progmem.data.AT_hostAddress
                0x00000000       0x32 AVRLib/ATCommands.o
 .text          0x00000000        0x0 AVRLib/SPI.o
 .bss           0x00000000        0x0 AVRLib/SPI.o
 .text.EEPROM_readByte
                0x00000000       0x24 AVRLib/SPI.o
 .text.EEPROM_writeByte
                0x00000000       0x34 AVRLib/SPI.o
 .text          0x00000000        0x0 AVRLib/USART.o
 .bss           0x00000000        0x0 AVRLib/USART.o
 .text.receiveByte
                0x00000000        0xe AVRLib/USART.o
 .text.printVolatileString
                0x00000000       0x28 AVRLib/USART.o
 .text.readString
                0x00000000       0x58 AVRLib/USART.o
 .text.printWord
                0x00000000       0x76 AVRLib/USART.o
 .text.printBinaryByte
                0x00000000       0x3c AVRLib/USART.o
 .text.nibbleToHexCharacter
                0x00000000        0xc AVRLib/USART.o
 .text.printHexByte
                0x00000000       0x1e AVRLib/USART.o
 .text.getNumber
                0x00000000       0x4a AVRLib/USART.o
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000       0x28 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
LOAD RGBLEDwButtons.o
LOAD AVRLib/ATCommands.o
LOAD AVRLib/SPI.o
LOAD AVRLib/USART.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xab8
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
 .progmem.data.AT_cipclose
                0x00000068        0xd AVRLib/ATCommands.o
                0x00000068                AT_cipclose
 .progmem.data.AT_rst
                0x00000075        0x9 AVRLib/ATCommands.o
                0x00000075                AT_rst
 .progmem.data.AT_cipserver
                0x0000007e        0xe AVRLib/ATCommands.o
                0x0000007e                AT_cipserver
 .progmem.data.AT_cipmux
                0x0000008c        0xe AVRLib/ATCommands.o
                0x0000008c                AT_cipmux
 .progmem.data.AT_cipsend
                0x0000009a        0xc AVRLib/ATCommands.o
                0x0000009a                AT_cipsend
 .progmem.data.AT_cwjap_cur
                0x000000a6        0xf AVRLib/ATCommands.o
                0x000000a6                AT_cwjap_cur
 .progmem.data.AT_cwmode_cur
                0x000000b5        0xf AVRLib/ATCommands.o
                0x000000b5                AT_cwmode_cur
 .progmem.data.AT_WP_submit
                0x000000c4       0x65 AVRLib/ATCommands.o
                0x000000c4                AT_WP_submit
 .progmem.data.AT_WP_home
                0x00000129       0xf2 AVRLib/ATCommands.o
                0x00000129                AT_WP_home
 .progmem.data.AT_port
                0x0000021b        0x3 AVRLib/ATCommands.o
                0x0000021b                AT_port
 .progmem.data.AT_terminator
                0x0000021e        0x4 AVRLib/ATCommands.o
                0x0000021e                AT_terminator
 .progmem.data.AT_separator
                0x00000222        0x4 AVRLib/ATCommands.o
                0x00000222                AT_separator
                0x00000226                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000226                __ctors_start = .
 *(.ctors)
                0x00000226                __ctors_end = .
                0x00000226                __dtors_start = .
 *(.dtors)
                0x00000226                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000226        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000226                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000226        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000232       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000232                __do_copy_data
 .init4         0x00000248       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x00000248                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000258        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000260        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
                0x00000260                __vector_20
                0x00000260                __vector_1
                0x00000260                __vector_24
                0x00000260                __vector_12
                0x00000260                __bad_interrupt
                0x00000260                __vector_6
                0x00000260                __vector_3
                0x00000260                __vector_23
                0x00000260                __vector_25
                0x00000260                __vector_13
                0x00000260                __vector_17
                0x00000260                __vector_19
                0x00000260                __vector_7
                0x00000260                __vector_5
                0x00000260                __vector_9
                0x00000260                __vector_2
                0x00000260                __vector_21
                0x00000260                __vector_15
                0x00000260                __vector_8
                0x00000260                __vector_14
                0x00000260                __vector_10
                0x00000260                __vector_16
                0x00000260                __vector_22
                0x00000264                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_4
                0x00000264       0x6a RGBLEDwButtons.o
                0x00000264                __vector_4
 .text.__vector_11
                0x000002ce       0x6c RGBLEDwButtons.o
                0x000002ce                __vector_11
 .text.startup.main
                0x0000033a      0x142 RGBLEDwButtons.o
                0x0000033a                main
 .text.clearBuffer
                0x0000047c       0x12 RGBLEDwButtons.o
                0x0000047c                clearBuffer
 .text.compareString
                0x0000048e       0x1e RGBLEDwButtons.o
                0x0000048e                compareString
 .text.get_SSID_PSWD_fromPartialQueryString
                0x000004ac       0x86 RGBLEDwButtons.o
                0x000004ac                get_SSID_PSWD_fromPartialQueryString
 .text.__vector_18
                0x00000532      0x21a RGBLEDwButtons.o
                0x00000532                __vector_18
 .text.transmitFromPGMSpace
                0x0000074c       0x4a AVRLib/ATCommands.o
                0x0000074c                transmitFromPGMSpace
 .text.ATsetCurrentWifiMode
                0x00000796       0x2a AVRLib/ATCommands.o
                0x00000796                ATsetCurrentWifiMode
 .text.ATconnectToAPI
                0x000007c0       0x40 AVRLib/ATCommands.o
                0x000007c0                ATconnectToAPI
 .text.ATsetMultipleConnections
                0x00000800        0xa AVRLib/ATCommands.o
                0x00000800                ATsetMultipleConnections
 .text.ATsetupServer
                0x0000080a       0x36 AVRLib/ATCommands.o
                0x0000080a                ATsetupServer
 .text.ATReset  0x00000840        0xa AVRLib/ATCommands.o
                0x00000840                ATReset
 .text.ATWaitForData
                0x0000084a        0x8 AVRLib/ATCommands.o
                0x0000084a                ATWaitForData
 .text.ATSendResp
                0x00000852       0x4c AVRLib/ATCommands.o
                0x00000852                ATSendResp
 .text.ATSendData
                0x0000089e       0x2a AVRLib/ATCommands.o
                0x0000089e                ATSendData
 .text.ATClose  0x000008c8       0x2c AVRLib/ATCommands.o
                0x000008c8                ATClose
 .text.initSPI_Master
                0x000008f4       0x14 AVRLib/SPI.o
                0x000008f4                initSPI_Master
 .text.SPI_tradeByte
                0x00000908        0xa AVRLib/SPI.o
                0x00000908                SPI_tradeByte
 .text.EEPROM_readStatus
                0x00000912       0x14 AVRLib/SPI.o
                0x00000912                EEPROM_readStatus
 .text.EEPROM_sendAddress
                0x00000926       0x12 AVRLib/SPI.o
                0x00000926                EEPROM_sendAddress
 .text.EEPROM_readPage
                0x00000938       0x6a AVRLib/SPI.o
                0x00000938                EEPROM_readPage
 .text.EEPROM_writeEnable
                0x000009a2        0xc AVRLib/SPI.o
                0x000009a2                EEPROM_writeEnable
 .text.EEPROM_writePage
                0x000009ae       0x66 AVRLib/SPI.o
                0x000009ae                EEPROM_writePage
 .text.initUSART
                0x00000a14       0x22 AVRLib/USART.o
                0x00000a14                initUSART
 .text.transmitByte
                0x00000a36        0xe AVRLib/USART.o
                0x00000a36                transmitByte
 .text.printString
                0x00000a44       0x26 AVRLib/USART.o
                0x00000a44                printString
 .text.printByte
                0x00000a6a       0x32 AVRLib/USART.o
                0x00000a6a                printByte
 .text.libgcc.div
                0x00000a9c       0x18 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                0x00000a9c                __udivmodqi4
                0x00000ab4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000ab4        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x00000ab4                exit
                0x00000ab4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000ab4        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000ab8                _etext = .

.data           0x00800100       0x92 load address 0x00000ab8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 RGBLEDwButtons.o
 .data          0x00800100        0x0 AVRLib/ATCommands.o
 .data          0x00800100        0x0 AVRLib/SPI.o
 .data          0x00800100        0x0 AVRLib/USART.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.nextCommand
                0x00800100        0x1 RGBLEDwButtons.o
                0x00800100                nextCommand
 .data.commands
                0x00800101       0x48 RGBLEDwButtons.o
                0x00800101                commands
 .data.linkID   0x00800149        0x2 RGBLEDwButtons.o
                0x00800149                linkID
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0080014b       0x44 RGBLEDwButtons.o
                                 0x49 (size before relaxing)
 .rodata.str1.1
                0x0080018f        0x2 AVRLib/ATCommands.o
                                  0x5 (size before relaxing)
 *(.gnu.linkonce.d*)
                0x00800192                . = ALIGN (0x2)
 *fill*         0x00800191        0x1 
                0x00800192                _edata = .
                0x00800192                PROVIDE (__data_end, .)

.bss            0x00800192       0x7e
                0x00800192                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800192       0x7e RGBLEDwButtons.o
                0x00800192                ssid
                0x008001b0                iReceiveBuffer
                0x008001b1                iCommands
                0x008001b2                pswd
                0x008001d0                colorBalance
                0x008001d3                AT_currentMode
                0x008001d4                receiveBuffer
                0x00800210                PROVIDE (__bss_end, .)
                0x00000ab8                __data_load_start = LOADADDR (.data)
                0x00000b4a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800210        0x0
                0x00800210                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800210                PROVIDE (__noinit_end, .)
                0x00800210                _end = .
                0x00800210                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 RGBLEDwButtons.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 AVRLib/ATCommands.o
 .comment       0x00000000       0x12 AVRLib/SPI.o
 .comment       0x00000000       0x12 AVRLib/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x238
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x50 RGBLEDwButtons.o
 .debug_aranges
                0x00000050       0x70 AVRLib/ATCommands.o
 .debug_aranges
                0x000000c0       0x60 AVRLib/SPI.o
 .debug_aranges
                0x00000120       0x78 AVRLib/USART.o
 .debug_aranges
                0x00000198       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_aranges
                0x000001b8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x000001d8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x000001f8       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000218       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x1b80
 *(.debug_info)
 .debug_info    0x00000000      0x7a7 RGBLEDwButtons.o
 .debug_info    0x000007a7      0x877 AVRLib/ATCommands.o
 .debug_info    0x0000101e      0x389 AVRLib/SPI.o
 .debug_info    0x000013a7      0x423 AVRLib/USART.o
 .debug_info    0x000017ca       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_info    0x00001888       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_info    0x00001946       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x00001a04       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x00001ac2       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x72d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x29a RGBLEDwButtons.o
 .debug_abbrev  0x0000029a      0x16d AVRLib/ATCommands.o
 .debug_abbrev  0x00000407      0x14f AVRLib/SPI.o
 .debug_abbrev  0x00000556      0x173 AVRLib/USART.o
 .debug_abbrev  0x000006c9       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_abbrev  0x000006dd       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x000006f1       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x00000705       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x00000719       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x81d
 *(.debug_line)
 .debug_line    0x00000000      0x20a RGBLEDwButtons.o
 .debug_line    0x0000020a      0x16d AVRLib/ATCommands.o
 .debug_line    0x00000377      0x13f AVRLib/SPI.o
 .debug_line    0x000004b6      0x184 AVRLib/USART.o
 .debug_line    0x0000063a       0x62 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .debug_line    0x0000069c       0x6a /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .debug_line    0x00000706       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x0000075e       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x000007bf       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x00000000      0x4ec
 *(.debug_frame)
 .debug_frame   0x00000000      0x144 RGBLEDwButtons.o
 .debug_frame   0x00000144      0x124 AVRLib/ATCommands.o
 .debug_frame   0x00000268      0x118 AVRLib/SPI.o
 .debug_frame   0x00000380      0x16c AVRLib/USART.o

.debug_str      0x00000000      0x68c
 *(.debug_str)
 .debug_str     0x00000000      0x34e RGBLEDwButtons.o
                                0x38d (size before relaxing)
 .debug_str     0x0000034e      0x1c8 AVRLib/ATCommands.o
                                0x33b (size before relaxing)
 .debug_str     0x00000516       0xad AVRLib/SPI.o
                                0x21c (size before relaxing)
 .debug_str     0x000005c3       0xc9 AVRLib/USART.o
                                0x23f (size before relaxing)

.debug_loc      0x00000000     0x1251
 *(.debug_loc)
 .debug_loc     0x00000000      0x388 RGBLEDwButtons.o
 .debug_loc     0x00000388      0x4f4 AVRLib/ATCommands.o
 .debug_loc     0x0000087c      0x403 AVRLib/SPI.o
 .debug_loc     0x00000c7f      0x5d2 AVRLib/USART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x170
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x58 RGBLEDwButtons.o
 .debug_ranges  0x00000058       0x60 AVRLib/ATCommands.o
 .debug_ranges  0x000000b8       0x50 AVRLib/SPI.o
 .debug_ranges  0x00000108       0x68 AVRLib/USART.o

.debug_macro
 *(.debug_macro)
OUTPUT(RGBLEDwButtons.elf elf32-avr)
LOAD linker stubs
